package com.learnJava.Stream_Terminal;

import com.learnJava.data.Student;
import com.learnJava.data.StudentDataBase;

import java.util.*;

import static java.util.stream.Collectors.*;

public class Stream3GroupingByExample {
    public static void ThreeArgumentGroupBy(){
        Map<String,Set<Student>> studentLinkedHashMap = StudentDataBase.getAllStudent()
                .stream()
                .collect(groupingBy(Student::getName,
                        LinkedHashMap::new, toSet()));
        System.out.println(studentLinkedHashMap);
    }

    public static void calculateTopGPA(){
       Map<Integer, Optional<Student>> studentOptional = StudentDataBase.getAllStudent()
                .stream()
                .collect(groupingBy(Student::getGradeLevel,
                        maxBy(Comparator.comparing(Student::getGap))));
        System.out.println(studentOptional);
    }

    public static void calculateTopGPA2(){
        Map<Integer, Student> studentOptional2 = StudentDataBase.getAllStudent()
                .stream()
                .collect(groupingBy(Student::getGradeLevel,
                        collectingAndThen(maxBy(Comparator.comparing(Student::getGap))
                        ,Optional::get)));
        System.out.println(studentOptional2);
    }

    public static void calculateLeastGPA1(){
        Map<Integer, Student> studentMap2 = StudentDataBase.getAllStudent()
                .stream()
                .collect(groupingBy(Student::getGradeLevel,
                        collectingAndThen(minBy(Comparator.comparing(Student::getGap)),
                                Optional::get)));
        System.out.println(studentMap2);
    }

    public static void calcluateLeastGPA2(){
        Map<Integer, Optional<Student>> studentOptional3 = StudentDataBase.getAllStudent()
                .stream()
                .collect(groupingBy(Student::getGradeLevel,
                        minBy(Comparator.comparing(Student::getGap))));
        System.out.println(studentOptional3);
    }

    public static void main(String[] args) {
        //ThreeArgumentGroupBy();
       //calculateTopGPA();
       // calculateTopGPA2();
       // calculateLeastGPA1();
        calcluateLeastGPA2();

    }
}
