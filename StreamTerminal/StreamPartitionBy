package com.learnJava.Stream_Terminal;

import com.learnJava.data.Student;
import com.learnJava.data.StudentDataBase;

import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.function.Predicate;

import static java.util.stream.Collectors.partitioningBy;
import static java.util.stream.Collectors.toSet;

public class StreamPartitionByExample {

    public static void Partition1(){
        Predicate<Student> studentPredicate = student -> student.getGap() >= 3.8;
         Map<Boolean, List<Student>> partitionMap = StudentDataBase.getAllStudent()
                .stream()
                .collect(partitioningBy(studentPredicate));  // partitioningBy
        System.out.println(partitionMap);
    }

    public static void Partition2(){
        Predicate<Student> studentPredicate = student -> student.getGap() >= 3.8;
        Map<Boolean, Set<Student>> partitionMap2 = StudentDataBase.getAllStudent()
                .stream()
                .collect(partitioningBy(studentPredicate,
                        toSet()));
        System.out.println(partitionMap2);
    }


    public static void main(String[] args) {
        //Partition1();
        Partition2();

    }
}
