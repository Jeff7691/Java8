package com.learnJava.NumericStream;

import java.util.Optional;
import java.util.OptionalDouble;
import java.util.OptionalInt;
import java.util.OptionalLong;
import java.util.stream.DoubleStream;
import java.util.stream.IntStream;
import java.util.stream.LongStream;

public class NumericStreamAggregateExamples {
    public static void main(String[] args) {
        //sum return int
        int sum = IntStream.rangeClosed(1,50).sum();
        System.out.println("count is: " + IntStream.rangeClosed(1,50).count());
        System.out.println("sum is : " + sum);

        //max and min return OptionalInt and OptionalLong --> return boolean
        OptionalInt optionalInt = IntStream.rangeClosed(1,50).max();
        System.out.println("count is: " + IntStream.rangeClosed(1,50).count());
        System.out.print("the max value is :");
        System.out.println( optionalInt.isPresent() ? optionalInt.getAsInt() : 0);

        OptionalLong optionalLong = LongStream.rangeClosed(1,50).min();
        System.out.println("count is : " + LongStream.rangeClosed(1,50).count());
        System.out.print("the min value is :");
        System.out.println(optionalLong.isPresent() ? optionalLong.getAsLong() : 0);

        //average return OptionalDouble
        OptionalDouble optionalDouble = IntStream.rangeClosed(1,50).average();
        System.out.println("count is : " + IntStream.rangeClosed(1,50).count());
        System.out.print("average is : ");
        System.out.println(optionalDouble.isPresent() ? optionalDouble.getAsDouble() : 0);

    }
}
