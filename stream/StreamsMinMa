package com.learnJava.stream;

import java.util.Arrays;
import java.util.List;
import java.util.Optional;

public class StreamsMinMaxExample {
    private static int findMaxValueOptional;
/*
    public static int findMaxValue(List<Integer> integerList){
        return integerList.stream()
                .reduce(0,(x,y) -> x > y ? x : y);
    }

 */

    public static Optional findMaxValueOptional(List<Integer> integerList){
        return integerList.stream()
                .reduce((x,y) -> x > y ? x : y);
    }


    public static void main(String[] args) {
        List<Integer> integerList = Arrays.asList(6,7,8,9,10);
       // int maxValue = findMaxValue(integerList);
       // System.out.println("max value is: " + maxValue);

        Optional<Integer> integerOptional = findMaxValueOptional(integerList);
        if(integerOptional.isPresent()){
            System.out.println("print optional max value: " + integerOptional.get()); // return Ops value
        }else{
            System.out.println("print nothing");
        }
    }
}
